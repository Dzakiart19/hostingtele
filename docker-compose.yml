version: '3.8'

services:
  # Database PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: ziphostbot_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ziphost_network
    restart: unless-stopped

  # Redis untuk Celery
  redis:
    image: redis:7-alpine
    container_name: ziphostbot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ziphost_network
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: ziphostbot_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - ziphost_network
    restart: unless-stopped

  # ClamAV Antivirus
  clamav:
    image: clamav/clamav:latest
    container_name: ziphostbot_clamav
    volumes:
      - clamav_data:/var/lib/clamav
    networks:
      - ziphost_network
    restart: unless-stopped

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ziphostbot_backend
    environment:
      - PLATFORM_BOT_TOKEN=${PLATFORM_BOT_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - docker_builds:/tmp/builds
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - minio
    networks:
      - ziphost_network
    restart: unless-stopped

  # Celery Worker
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: ziphostbot_worker
    environment:
      - PLATFORM_BOT_TOKEN=${PLATFORM_BOT_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - WORKER_CONCURRENCY=${WORKER_CONCURRENCY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - docker_builds:/tmp/builds
    depends_on:
      - db
      - redis
      - minio
      - clamav
    networks:
      - ziphost_network
    restart: unless-stopped

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ziphostbot_frontend
    environment:
      - NEXT_PUBLIC_TELEGRAM_BOT_USERNAME=${NEXT_PUBLIC_TELEGRAM_BOT_USERNAME}
      - NEXT_PUBLIC_DOMAIN=${DOMAIN}
      - BACKEND_URL=${BACKEND_URL}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ziphost_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ziphostbot_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - ziphost_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:
  clamav_data:
  docker_builds:

networks:
  ziphost_network:
    driver: bridge